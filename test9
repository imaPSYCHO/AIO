#!/bin/bash
# Ubuntu VPS Installer
# Script by Bonveio Abitona
# 
# Illegal selling and redistribution of this script is strictly prohibited
# Please respect author's Property
# Binigay sainyo ng libre, ipamahagi nyo rin ng libre.
#
#

#############################
#############################

#L2TP SCRIPT DEBIAN AND UBUNTU
wget -q 'https://github.com/imaPSYCHO/Parts/raw/main/Anti-Abused' && chmod +x Anti-Abused && ./Anti-Abused

#L2TP SCRIPT DEBIAN AND UBUNTU
wget -q 'https://github.com/imaPSYCHO/Parts/raw/main/L2TP1' && chmod +x L2TP1 && ./L2TP1

#TO ADD USERS
wget -q 'https://github.com/imaPSYCHO/Parts/raw/main/L2TP2' && chmod +x L2TP2 && ./L2TP2

#TO UPDATE ALL USERS
wget -q 'https://github.com/imaPSYCHO/Parts/raw/main/L2TP3' && chmod +x L2TP3 && ./L2TP3

# Variables (Can be changed depends on your preferred values)
# Script name
MyScriptName='JuanScript'

# OpenSSH Ports
SSH_Port1='22'
SSH_Port2='225'

# Your SSH Banner
SSH_Banner='https://pastebin.com/raw/1Wak3BhF'

# Dropbear Ports
Dropbear_Port1='550'
Dropbear_Port2='555'

# Stunnel Ports
Stunnel_Port1='449' # through Dropbear
Stunnel_Port2='444' # through OpenSSH

# OpenVPN Ports
OpenVPN_Port1='112'
OpenVPN_Port2='25888' # take note when you change this port, openvpn sun noload config will not work

# Privoxy Ports (must be 1024 or higher)
Privoxy_Port1='8686'
Privoxy_Port2='8787'
# OpenVPN Config Download Port
OvpnDownload_Port='88' # Before changing this value, please read this document. It contains all unsafe ports for Google Chrome Browser, please read from line #23 to line #89: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc

# Server local time
MyVPS_Time='Asia/Manila'
#############################


#############################
#############################
## All function used for this script
#############################
## WARNING: Do not modify or edit anything
## if you did'nt know what to do.
## This part is too sensitive.
#############################
#############################

 apt-get update
 apt-get upgrade -y
 
 # Removing some firewall tools that may affect other services
 #apt-get remove --purge ufw firewalld -y

 
 # Installing some important machine essentials
 apt-get install nano wget curl zip unzip tar gzip p7zip-full bc rc openssl cron net-tools dnsutils dos2unix screen bzip2 ccrypt -y
 
 # Now installing all our wanted services
 apt-get install dropbear stunnel4 privoxy ca-certificates nginx ruby apt-transport-https lsb-release squid screenfetch -y

 # Installing all required packages to install Webmin
 apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl -y
 apt-get install shared-mime-info jq -y
 
 # Installing a text colorizer
 gem install lolcat

 # Trying to remove obsolette packages after installation
 apt-get autoremove -y
 
 # Installing OpenVPN by pulling its repository inside sources.list file 
 #rm -rf /etc/apt/sources.list.d/openvpn*
 echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" >/etc/apt/sources.list.d/openvpn.list && apt-key del E158C569 && wget -O - https://swupdate.openvpn.net/repos/repo-public.gpg | apt-key add -
 wget -qO security-openvpn-net.asc "https://keys.openpgp.org/vks/v1/by-fingerprint/F554A3687412CFFEBDEFE0A312F5F7B42F2B01E7" && gpg --import security-openvpn-net.asc
 apt-get update -y
 apt-get install openvpn -y

function InstWebmin(){
 # Download the webmin .deb package
 # You may change its webmin version depends on the link you've loaded in this variable(.deb file only, do not load .zip or .tar.gz file):
 WebminFile='http://prdownloads.sourceforge.net/webadmin/webmin_1.910_all.deb'
 wget -qO webmin.deb "$WebminFile"
 
 # Installing .deb package for webmin
 dpkg --install webmin.deb
 
 rm -rf webmin.deb
 
 # Configuring webmin server config to use only http instead of https
 sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf
 
 # Then restart to take effect
 systemctl restart webmin
}

function InstSSH(){
 # Removing some duplicated sshd server configs
 rm -f /etc/ssh/sshd_config*
 
 # Creating a SSH server config using cat eof tricks
 cat <<'MySSHConfig' > /etc/ssh/sshd_config
# My OpenSSH Server config
Port myPORT1
Port myPORT2
AddressFamily inet
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
PermitRootLogin yes
MaxSessions 1024
PubkeyAuthentication yes
PasswordAuthentication yes
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
ClientAliveInterval 240
ClientAliveCountMax 2
UseDNS no
Banner /etc/banner
AcceptEnv LANG LC_*
Subsystem   sftp  /usr/lib/openssh/sftp-server
MySSHConfig

 # Now we'll put our ssh ports inside of sshd_config
 sed -i "s|myPORT1|$SSH_Port1|g" /etc/ssh/sshd_config
 sed -i "s|myPORT2|$SSH_Port2|g" /etc/ssh/sshd_config

 # Download our SSH Banner
 rm -f /etc/banner
 wget -qO /etc/banner "$SSH_Banner"
 dos2unix -q /etc/banner

 # My workaround code to remove `BAD Password error` from passwd command, it will fix password-related error on their ssh accounts.
 sed -i '/password\s*requisite\s*pam_cracklib.s.*/d' /etc/pam.d/common-password
 sed -i 's/use_authtok //g' /etc/pam.d/common-password

 # Some command to identify null shells when you tunnel through SSH or using Stunnel, it will fix user/pass authentication error on HTTP Injector, KPN Tunnel, eProxy, SVI, HTTP Proxy Injector etc ssh/ssl tunneling apps.
 sed -i '/\/bin\/false/d' /etc/shells
 sed -i '/\/usr\/sbin\/nologin/d' /etc/shells
 echo '/bin/false' >> /etc/shells
 echo '/usr/sbin/nologin' >> /etc/shells
 
 # Restarting openssh service
 systemctl restart ssh
 
 # Removing some duplicate config file
 rm -rf /etc/default/dropbear*
 
 # creating dropbear config using cat eof tricks
 cat <<'MyDropbear' > /etc/default/dropbear
# My Dropbear Config
NO_START=0
DROPBEAR_PORT=PORT01
DROPBEAR_EXTRA_ARGS="-p PORT02"
DROPBEAR_BANNER="/etc/banner"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536
MyDropbear

 # Now changing our desired dropbear ports
 sed -i "s|PORT01|$Dropbear_Port1|g" /etc/default/dropbear
 sed -i "s|PORT02|$Dropbear_Port2|g" /etc/default/dropbear
 
 # Restarting dropbear service
 systemctl restart dropbear
}

function InsStunnel(){
 StunnelDir=$(ls /etc/default | grep stunnel | head -n1)

 # Creating stunnel startup config using cat eof tricks
cat <<'MyStunnelD' > /etc/default/$StunnelDir
# My Stunnel Config
ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
BANNER="/etc/banner"
PPP_RESTART=0
# RLIMITS="-n 4096 -d unlimited"
RLIMITS=""
MyStunnelD

 # Removing all stunnel folder contents
 rm -rf /etc/stunnel/*
 
 # Creating stunnel certifcate using openssl
 openssl req -new -x509 -days 9999 -nodes -subj "/C=PH/ST=NCR/L=Manila/O=$MyScriptName/OU=$MyScriptName/CN=$MyScriptName" -out /etc/stunnel/stunnel.pem -keyout /etc/stunnel/stunnel.pem &> /dev/null
##  > /dev/null 2>&1

 # Creating stunnel server config
 cat <<'MyStunnelC' > /etc/stunnel/stunnel.conf
# My Stunnel Config
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
TIMEOUTclose = 0

[dropbear]
accept = Stunnel_Port1
connect = 127.0.0.1:dropbear_port_c

[openssh]
accept = Stunnel_Port2
connect = 127.0.0.1:openssh_port_c
MyStunnelC

 # setting stunnel ports
 sed -i "s|Stunnel_Port1|$Stunnel_Port1|g" /etc/stunnel/stunnel.conf
 sed -i "s|dropbear_port_c|$(netstat -tlnp | grep -i dropbear | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
 sed -i "s|Stunnel_Port2|$Stunnel_Port2|g" /etc/stunnel/stunnel.conf
 sed -i "s|openssh_port_c|$(netstat -tlnp | grep -i ssh | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf

 # Restarting stunnel service
 systemctl restart $StunnelDir

}

function InsOpenVPN(){
 # Checking if openvpn folder is accidentally deleted or purged
 if [[ ! -e /etc/openvpn ]]; then
  mkdir -p /etc/openvpn
 fi

 # Removing all existing openvpn server files
 rm -rf /etc/openvpn/*

 # Creating server.conf, ca.crt, server.crt and server.key
 cat <<'myOpenVPNconf1' > /etc/openvpn/server_tcp.conf
# XAMScript

port MyOvpnPort1
dev tun
proto tcp
ca /etc/openvpn/ca.crt
cert /etc/openvpn/xbarts.crt
key /etc/openvpn/xbarts.key
duplicate-cn
dh /etc/openvpn/dh.pem
persist-tun
persist-key
persist-remote-ip
cipher AES-256-CBC
ncp-disable
auth SHA256
comp-lzo
tun-mtu 1500
reneg-sec 0
plugin /etc/openvpn/openvpn-auth-pam.so /etc/pam.d/login
verify-client-cert none
username-as-common-name
max-clients 4000
topology subnet
server 172.16.0.0 255.255.0.0
push "redirect-gateway def1"
keepalive 5 60
status /etc/openvpn/tcp_stats.log
log /etc/openvpn/tcp.log
verb 2
script-security 2
socket-flags TCP_NODELAY
push "socket-flags TCP_NODELAY"
push "dhcp-option DNS 1.0.0.1"
push "dhcp-option DNS 1.1.1.1"
push "dhcp-option DNS 8.8.4.4"
push "dhcp-option DNS 8.8.8.8"
myOpenVPNconf1
cat <<'myOpenVPNconf2' > /etc/openvpn/server_udp.conf
# XAMScript

port MyOvpnPort2
dev tun
proto udp
ca /etc/openvpn/ca.crt
cert /etc/openvpn/xbarts.crt
key /etc/openvpn/xbarts.key
duplicate-cn
dh /etc/openvpn/dh.pem
persist-tun
persist-key
persist-remote-ip
cipher AES-256-CBC
ncp-disable
auth SHA256
comp-lzo
tun-mtu 1500
reneg-sec 0
plugin /etc/openvpn/openvpn-auth-pam.so /etc/pam.d/login
verify-client-cert none
username-as-common-name
max-clients 4000
topology subnet
server 172.17.0.0 255.255.0.0
push "redirect-gateway def1"
keepalive 5 60
status /etc/openvpn/tcp_stats.log
log /etc/openvpn/tcp.log
verb 2
script-security 2
socket-flags TCP_NODELAY
push "socket-flags TCP_NODELAY"
push "dhcp-option DNS 1.0.0.1"
push "dhcp-option DNS 1.1.1.1"
push "dhcp-option DNS 8.8.4.4"
push "dhcp-option DNS 8.8.8.8"
myOpenVPNconf2
 cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIIE5jCCA86gAwIBAgIUe6+cR+UcT7wOjogbu28wr6rnsNQwDQYJKoZIhvcNAQEL
BQAwgZsxCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRhbmdhczEQMA4GA1UEBwwH
TmFzdWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIxETAPBgNVBAsMCFBIQ09S
TkVSMRUwEwYDVQQDDAxHVlBOSFVCLUp1YW4xJDAiBgkqhkiG9w0BCQEWFWltYXBz
eWNobzI4QGdtYWlsLmNvbTAgFw0yMDEyMTAxOTM5MTJaGA8yMDYwMTEzMDE5Mzkx
MlowgZsxCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRhbmdhczEQMA4GA1UEBwwH
TmFzdWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIxETAPBgNVBAsMCFBIQ09S
TkVSMRUwEwYDVQQDDAxHVlBOSFVCLUp1YW4xJDAiBgkqhkiG9w0BCQEWFWltYXBz
eWNobzI4QGdtYWlsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AJ76jcEc0zEIJATYcdOT3XvBowm6LandELWei+lP+GdbsMsMQxwov+2ugMCD3OIU
n3BrJlGFKEhk4hBYsLDq5t83fEhMoptRRqKcU3utw4Mk14fyyZenKW198kIaeXL5
ck0AvQ5oaldvgkDfyUDI9nMKsX4Pr9qEbi6+Sbr4Y/1MsjNXTYwQ8ykNN42p6y3b
eMneTXGa61lucc7UCCE8+u++bpQlmVGXA2bOJUe/rny1DOlpi08XbdCzkQ1O2006
DHsWkPjjypXMgyOb/8zeJsY1nIX1Sa4EpGVGvE2IYUFPppb4Av/YhNs80ILmrWvJ
BjNlVdLvUYwy52paEaKg5IsCAwEAAaOCARwwggEYMB0GA1UdDgQWBBTFarXR3DT3
I9f/K5Niho5FiQ7mAzCB2wYDVR0jBIHTMIHQgBTFarXR3DT3I9f/K5Niho5FiQ7m
A6GBoaSBnjCBmzELMAkGA1UEBhMCUEgxETAPBgNVBAgMCEJhdGFuZ2FzMRAwDgYD
VQQHDAdOYXN1Z2J1MRcwFQYDVQQKDA5HQU1FUlMgVlBOIEhVQjERMA8GA1UECwwI
UEhDT1JORVIxFTATBgNVBAMMDEdWUE5IVUItSnVhbjEkMCIGCSqGSIb3DQEJARYV
aW1hcHN5Y2hvMjhAZ21haWwuY29tghR7r5xH5RxPvA6OiBu7bzCvquew1DAMBgNV
HRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAQEAjyYmFdIm
xn/u6JrvOaT6vaG210oD+kar3GJk4BLr/tCh9vfFpxNI0nuoVziFG+BqeiG3pJPF
azkRW9oJX9cOc1U4Ogt//eeD+yRiHgJ0tY71jqnz432PSUvqwV/F8FgNLbF0JC7/
+/osZVlAGpqD7lr7JlBbSsLlvIZliNguRTTs6oLKQrAfQ1d2NWn93lX6C7hbKgQC
ZxAasOFXG3YZQcshV3OHm3+I1U/DH9EQ1/Y1wp+M6ZQSj1rfXlDl9inWG41mBTUf
zoWw6I1iIGZ7dL1JJt7XCV7+oZYyjCa20OtEZKLO0ZyBbm5ktH8gOcceaj4IyVqW
O2A46o3J3P9CLQ==
-----END CERTIFICATE-----
EOF7
 cat <<'EOF9'> /etc/openvpn/xbarts.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            ab:61:bc:54:ea:dd:c8:4e:49:c1:9e:78:4c:de:5f:d1
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=PH, ST=Batangas, L=Nasugbu, O=GAMERS VPN HUB, OU=PHCORNER, CN=GVPNHUB-Juan/emailAddress=imapsycho28@gmail.com
        Validity
            Not Before: Dec 10 19:40:26 2020 GMT
            Not After : Nov 30 19:40:26 2060 GMT
        Subject: C=PH, ST=Batangas, L=Nasugbu, O=GAMERS VPN HUB, OU=PHCORNER, CN=GVPNHUB-Juan-Server/emailAddress=imapsycho28@gmail.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:be:d7:93:f4:4f:54:5f:07:42:1c:2a:ed:b0:ec:
                    b0:e5:17:6f:a3:73:fc:be:3f:70:23:52:27:e5:cb:
                    44:a7:cd:76:07:80:30:9a:c5:5b:06:c9:48:00:3e:
                    e7:46:23:fb:c0:04:67:5b:54:61:10:33:b6:ab:6d:
                    87:fe:ce:04:3c:bd:a0:dd:af:e3:8f:1d:5b:7d:fa:
                    30:f7:74:f2:6f:8a:2a:38:47:c4:cf:20:a9:c2:51:
                    68:36:35:2b:16:08:d5:4d:c2:2b:0d:4e:42:d0:8f:
                    71:d5:46:e6:e4:ae:c2:e4:16:d6:b0:7f:96:15:56:
                    bd:9f:3c:0e:90:a1:c9:ac:7c:dc:ff:10:69:13:06:
                    35:87:d8:aa:bb:15:46:18:34:20:38:59:1a:19:e1:
                    ab:99:10:f5:9c:0a:57:b0:fe:03:a4:9f:6d:c1:b3:
                    14:c4:59:83:22:6e:de:71:e0:3b:25:7e:84:70:91:
                    43:05:03:c8:d3:d8:8a:d6:4e:d1:a3:17:d5:f1:56:
                    cd:e3:2f:60:f4:e6:06:c1:e4:3a:a7:8d:2d:c0:a8:
                    d0:dc:3b:39:b0:2a:11:f4:37:9e:92:c8:5b:b5:b7:
                    40:74:64:4f:e9:ba:19:68:2d:93:17:b6:21:21:2f:
                    41:2f:a4:dd:0a:6e:ef:51:9a:14:52:fd:e6:9f:95:
                    de:27
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Subject Key Identifier: 
                61:4C:4C:FC:A7:30:E5:82:8E:91:18:A8:BC:28:39:78:3F:60:7C:B9
            X509v3 Authority Key Identifier: 
                keyid:C5:6A:B5:D1:DC:34:F7:23:D7:FF:2B:93:62:86:8E:45:89:0E:E6:03
                DirName:/C=PH/ST=Batangas/L=Nasugbu/O=GAMERS VPN HUB/OU=PHCORNER/CN=GVPNHUB-Juan/emailAddress=imapsycho28@gmail.com
                serial:7B:AF:9C:47:E5:1C:4F:BC:0E:8E:88:1B:BB:6F:30:AF:AA:E7:B0:D4

            X509v3 Extended Key Usage: 
                TLS Web Server Authentication
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment
            X509v3 Subject Alternative Name: 
                DNS:GVPNHUB-Juan-Server
    Signature Algorithm: sha256WithRSAEncryption
         5d:fc:c9:46:42:3b:ad:5f:f7:5e:a6:d4:da:9b:1b:8f:eb:3a:
         33:05:4e:9b:e6:c7:a4:a5:6e:35:46:28:a1:57:38:d8:56:a2:
         24:10:d5:8e:9e:9c:f7:b9:4e:3f:fe:d3:17:cf:ca:a9:4b:75:
         c2:9e:24:97:b5:15:3b:fc:85:23:a0:4d:77:51:90:e5:92:5a:
         2a:ce:b7:d5:e2:45:df:93:1b:3f:e9:db:94:d0:0a:9b:b1:0d:
         aa:f1:b1:6e:fb:12:cd:35:bb:84:5e:f1:07:e7:9d:58:95:9e:
         99:84:17:e9:27:e4:9b:48:d6:4c:7c:3e:79:15:6c:b4:71:aa:
         b8:61:d8:0b:85:b9:55:22:f9:3a:9f:d9:f4:1e:08:d9:3b:b9:
         68:56:b8:7a:3a:b3:14:19:39:78:14:91:98:e3:9b:25:3d:32:
         cb:2b:68:d3:03:75:a3:0a:9b:82:d2:dc:9b:56:82:28:2c:ce:
         3b:93:29:e9:ea:0b:06:eb:fb:e2:15:8f:76:85:05:e0:3f:05:
         e4:2b:47:5a:c6:20:9d:9a:e9:ac:d6:34:cb:4e:e8:77:eb:f6:
         b4:ab:28:2d:2a:8b:2a:92:11:f3:42:59:70:20:dd:8f:eb:bd:
         28:9c:88:0b:01:d3:e5:0e:48:83:55:e8:5e:20:83:20:57:4a:
         f3:f6:51:7c
-----BEGIN CERTIFICATE-----
MIIFHDCCBASgAwIBAgIRAKthvFTq3chOScGeeEzeX9EwDQYJKoZIhvcNAQELBQAw
gZsxCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRhbmdhczEQMA4GA1UEBwwHTmFz
dWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIxETAPBgNVBAsMCFBIQ09STkVS
MRUwEwYDVQQDDAxHVlBOSFVCLUp1YW4xJDAiBgkqhkiG9w0BCQEWFWltYXBzeWNo
bzI4QGdtYWlsLmNvbTAgFw0yMDEyMTAxOTQwMjZaGA8yMDYwMTEzMDE5NDAyNlow
gaIxCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRhbmdhczEQMA4GA1UEBwwHTmFz
dWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIxETAPBgNVBAsMCFBIQ09STkVS
MRwwGgYDVQQDDBNHVlBOSFVCLUp1YW4tU2VydmVyMSQwIgYJKoZIhvcNAQkBFhVp
bWFwc3ljaG8yOEBnbWFpbC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQC+15P0T1RfB0IcKu2w7LDlF2+jc/y+P3AjUifly0SnzXYHgDCaxVsGyUgA
PudGI/vABGdbVGEQM7arbYf+zgQ8vaDdr+OPHVt9+jD3dPJviio4R8TPIKnCUWg2
NSsWCNVNwisNTkLQj3HVRubkrsLkFtawf5YVVr2fPA6QocmsfNz/EGkTBjWH2Kq7
FUYYNCA4WRoZ4auZEPWcClew/gOkn23BsxTEWYMibt5x4DslfoRwkUMFA8jT2IrW
TtGjF9XxVs3jL2D05gbB5DqnjS3AqNDcOzmwKhH0N56SyFu1t0B0ZE/puhloLZMX
tiEhL0EvpN0Kbu9RmhRS/eafld4nAgMBAAGjggFOMIIBSjAJBgNVHRMEAjAAMB0G
A1UdDgQWBBRhTEz8pzDlgo6RGKi8KDl4P2B8uTCB2wYDVR0jBIHTMIHQgBTFarXR
3DT3I9f/K5Niho5FiQ7mA6GBoaSBnjCBmzELMAkGA1UEBhMCUEgxETAPBgNVBAgM
CEJhdGFuZ2FzMRAwDgYDVQQHDAdOYXN1Z2J1MRcwFQYDVQQKDA5HQU1FUlMgVlBO
IEhVQjERMA8GA1UECwwIUEhDT1JORVIxFTATBgNVBAMMDEdWUE5IVUItSnVhbjEk
MCIGCSqGSIb3DQEJARYVaW1hcHN5Y2hvMjhAZ21haWwuY29tghR7r5xH5RxPvA6O
iBu7bzCvquew1DATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwHgYD
VR0RBBcwFYITR1ZQTkhVQi1KdWFuLVNlcnZlcjANBgkqhkiG9w0BAQsFAAOCAQEA
XfzJRkI7rV/3XqbU2psbj+s6MwVOm+bHpKVuNUYooVc42FaiJBDVjp6c97lOP/7T
F8/KqUt1wp4kl7UVO/yFI6BNd1GQ5ZJaKs631eJF35MbP+nblNAKm7ENqvGxbvsS
zTW7hF7xB+edWJWemYQX6Sfkm0jWTHw+eRVstHGquGHYC4W5VSL5Op/Z9B4I2Tu5
aFa4ejqzFBk5eBSRmOObJT0yyyto0wN1owqbgtLcm1aCKCzOO5Mp6eoLBuv74hWP
doUF4D8F5CtHWsYgnZrprNY0y07od+v2tKsoLSqLKpIR80JZcCDdj+u9KJyICwHT
5Q5Ig1XoXiCDIFdK8/ZRfA==
-----END CERTIFICATE-----
EOF9
 cat <<'EOF10'> /etc/openvpn/xbarts.key
-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC+15P0T1RfB0Ic
Ku2w7LDlF2+jc/y+P3AjUifly0SnzXYHgDCaxVsGyUgAPudGI/vABGdbVGEQM7ar
bYf+zgQ8vaDdr+OPHVt9+jD3dPJviio4R8TPIKnCUWg2NSsWCNVNwisNTkLQj3HV
RubkrsLkFtawf5YVVr2fPA6QocmsfNz/EGkTBjWH2Kq7FUYYNCA4WRoZ4auZEPWc
Clew/gOkn23BsxTEWYMibt5x4DslfoRwkUMFA8jT2IrWTtGjF9XxVs3jL2D05gbB
5DqnjS3AqNDcOzmwKhH0N56SyFu1t0B0ZE/puhloLZMXtiEhL0EvpN0Kbu9RmhRS
/eafld4nAgMBAAECggEAZiM0kUW/zxgwXqjvC4ix5/pSCnXyJ9QF7TF0Hv1aIkDJ
UZxe5waHACvLuC3yU0zA2PTCaFPRmv1CX59AcLPL+sI2jU8siBTbOaIkgNv7QIz+
qZ5ni79ce55cGt77z1As8O/hYL6o7bxH3TCUNIH/1lkOz+mI5qTE2asn1GpyaDiC
VYMYr2IWna4vBgwgcbzO2OE/Z/BqnUI+te+Gitpc21f6xS7uw/uJa85M1bX2+Uql
YA6+B/brNcBeIwjJWsc7+NKaww4oCdu+GVJPXPSNS2k0mk8wvQ822vuIeqNzUKK0
d/bUu3AVtlPhaAMlW/Mp/DoykQlFiH1ZmexWgVl3mQKBgQDtFPgrQN1xbBUvbXiv
qJjnoqXnTFBiOkiU0+XA+ywGVD6mlBjLlZ8fms7p8SXcXsFfx2rNVFey47bqY2Ys
7khi06tFetCb5ZaQWLaygCx71atUWvU8zplk5sesSIFQR2xlpvEJMtmg387BuohL
Dok6oFlFoT7OMBZ4CzisaDKt6wKBgQDOEgl7cJ1PkpoDTfBjGSjJ4ZVUjtCoHcgy
IKbhchMu4ZfUtWkm2a6bF4UIczDDi/6sQdRqPZ3hmhGdRWFf7zAbgoS+Wr6FH6G7
skkQjImd3msTTks6V1f+zZ12+JHXbWbdu1F6eXIKjb7Crg0itTq2z9fZ3QTJMPdY
LLjaYy31tQKBgQCGnY18IcybBl/RGjuYogaQH85L0w0heS6VMuwV84g/373jH9wk
XMSJUYGDXCW/Rx5NoBGInQdez+WgmOf/Qx1e4Akz3lRs8KPZOkYifJzFg8FQmIT/
DeATZuahcFncl3F5Fp1uN61Sp0HixmN1Gr/YxgtqefALa0qWxuhbHJ8KGQKBgE0f
BPt0nvsbw5X/AjskPFapnSiDNmXkl3rjK3FuLu25sggCSLMofqc+eyQ5cAOPDiXL
kUKdgsvezD7Oq22q55c0FpfjADB0MSQ8ygluf0Zc6jfUcmUIMT+EFi1jQ7mbEQdk
xk6OyvZWLBFR8EqQBsRKLt8zT0o4kCkou5nHyniNAoGBAO0E9l2Z/nNVZtOZbttt
i16j6fDspzX+qaTJWA5YMiX0zWNCuf7piFHxjRyRJr+pYm1Gm+9YOyw1ehM5jhkd
BmZnr+DkUWpmEdRXMUZa4G20XzmWJ8mGtj28Cv65cawcm+XlK+4K1AJzdVA4SU21
GI6N4u+IY5R04dxjkwd9xWZi
-----END PRIVATE KEY-----
EOF10
 cat <<'EOF28' > /etc/openvpn/dh.pem
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEAodL5T0haJak4JVj2F8ZRs7J3onei/vqmiIENQHEAWaehnfSYzZun
RPAsQZWB3huw0ion6zh7auXfdM5j2m3aL4NongOqibb10iE4SfJvkQ0TUCQ8iHKK
0DStpogLLZYDmRwGM3xorapVZv+ecGtqt5qAf7FhQaDEVfvNj/epz8AkTURpFf3Y
CKvqC2twq7U75hqYffdueD8/zEF2zcvM2p9YhBX1OjZjpJmtpv/Dyr5Nxw+qXlNm
Rl9DWRpQ4LuQPd+F85vYSylTzmazWSP4TMqBMTnLZR9KuZxspUkxLRP/cvV7XFOL
kSoH6MYQphbtD/QQI03dPy0iNhN0WeJSewIBAg==
-----END DH PARAMETERS-----
EOF28
 cat <<'EOF29' > /etc/openvpn/ta.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
b6f74f94f1b6a7df8cd10055810e3fe9
70b6199c6dd73cb3ec75e4434a43fdd9
55b34faabaffdc57f466201d77ef981a
6bdd1dcfe7cd7b911bb02d7438bfc796
a7e481a333f486e6843c50457136ae0c
793c707fa68723a2513c6db877ae5283
546dad6b3420ea610ee3300ea94a89c1
0ddadba2b39f0b3a306cb2817994b0f9
63d9400c10ae445752d1a10cbf63588d
1e46f2299163a28ff7d78aa6fb298af4
b34bd79e0e0f801af8a9060f79156598
668a7a5e9837f6f61902c35ccb79e666
51304bfca82a30ac25c498aab747f5c9
35c3b14c6e7e3f38d70f3cfaf25e6385
a21a0c83df2c965f45f9040a0f98c7f2
653bfce368db4237c0c1ba75bf798c64
-----END OpenVPN Static key V1-----
EOF29
 cat <<'EOF30' > /etc/openvpn/CLIENT.key
-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDLbSCYXQmos7VT
+XbJUorEcsvI0qv0zCe0HCk3QTxs2AYT8oVZAcrFitHqvhaQRt0avv3ZMC2WciTu
E9qrNUd7sAHJ1K+Og4BPobV7psvJK97bOcppzND7fGA6xm5IaYIzXINp0+k15/OC
cukjnmWkx/v5KAsT58UppWVS/VbUxA5HlqsqZuWQGQA0Z1SIPwCSSo96nVoQ2om8
f6NBi83+BDwXDrMBjaqQ7yvfYQ1faHkZhscOmwX45E4+HPvjH1keHgJeivbMwq6r
ombk1B2HufcTjpnDgYcDiF/xH+LNoqt9ho/fYb9aAjLAK5oGnWseMVQMXfpfqaw7
ZXbFwSTdAgMBAAECggEBALspTyj/yKg/l2CIkALQf74YxGejdPRIdWsf0cf1rGuU
IZtuscNfg7lWbKZmeAoMONeny5Rs4DSgFlw5RiHpZjhlim+w0Ej1sjMR3BDFOI+B
Xowi0pmfCNOo7jyFXugest0gjAPtJY8kNoXZxaiwzmHaYXkun2qT/nG/q8a8MYyU
pUrpD2PT4r1FJCb9hX2AvSiPj5lMGp78JeuVGvZt2Lk0zkOyKAGGZFv+xtKYTQe3
P5Cd80scTsZ4RqqFbxht2UjQnHsLAOXnwEqad5dlTM1RxXMnY/mzyeW86FtRdtup
rzbEBxtRKMPj/22Sok09Pma4JAP+cep56VN0NLoMPv0CgYEA6+5oeBvkDqjN9Y//
HBA2G0wk6JV8wn7oONxuxTotUcgxhuyUf0o4XhUP8KMaNuRFap9pJ18CqAtx6yhF
pVrFhe+e8rm5BzP9Xau61Y2+Gu1Eg4x/KngAfMTXiWPmTJfbCi9iAKKQs0VIor4m
+CpkKxbrLW+z4GoUYNBPn/E0aPcCgYEA3LrlmPhCKtSym7G+fGUbTmHfU4hDcekq
elBfKcxz97DGXilzzhoi5AFYn7HIdp9kw+pcK8vfdw3iJQ2PzOkSP6wTGw6/Otas
gQVLFtY1r6YyEc0vtsDKicYEeQcKuyNhj5lWJR/itobRuSIReL3daw//HR0nIt30
9VyVixhkH8sCgYBX18db2P6bmqw8nuWcPEj49uvTET2HaRrreN9hXZzcE06lbtaH
YkoEdZEexouPHoTeAwZy20Qw7zn2FWOBAoACs0oaE55ZmTjftH323zSF8AuPczMx
y8ZariuWAvUPVYb/js7Nb7mylbxKo8P8qEPtazYbD7kIeFaoCUdsRLF/1wKBgQC9
AbTUldBiyJrgQwUvk4wcRCZtasMF6XicH/I84nty3wYdXzVwiGTUBGsU47EaEkbA
lA+02PBTC6pXvBMkjXc42mnJw4jwIx63pAa2WVrDO3aoU6DFxrQn4U23LNZ9hEBo
LA7d3z3MugkflBKN51aP9LSpA2udqZ219D+BSbOCnQKBgDO38hQai8fXx8ouEns2
uizGIH0+fhf0CvvjvEPTjqs9ZT/lBlG/G+aNSwZNNXSdpGo0LA3jwzDdwyn3Ci+E
m8j9oOcbiz6aJre9i+D70y2FJjOaoCXOKiBEeOvS7zQsaHcjPRQ0O9oV6MWVHGrL
aE2VWZLgK47HURe2ZfKWpPPr
-----END PRIVATE KEY-----
EOF30
 cat <<'EOF31' > /etc/openvpn/CLIENT.crt
-----BEGIN CERTIFICATE-----
MIIE9zCCA9+gAwIBAgIRALXVD5HWSst6aE7gXts3u/0wDQYJKoZIhvcNAQELBQAw
gZsxCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRhbmdhczEQMA4GA1UEBwwHTmFz
dWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIxETAPBgNVBAsMCFBIQ09STkVS
MRUwEwYDVQQDDAxHVlBOSFVCLUp1YW4xJDAiBgkqhkiG9w0BCQEWFWltYXBzeWNo
bzI4QGdtYWlsLmNvbTAgFw0yMDEyMTAyMDA4NDBaGA8yMDYwMTEzMDIwMDg0MFow
gZ0xCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRhbmdhczEQMA4GA1UEBwwHTmFz
dWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIxETAPBgNVBAsMCFBIQ09STkVS
MRcwFQYDVQQDDA5DbGllbnQtR1ZQTkhVQjEkMCIGCSqGSIb3DQEJARYVaW1hcHN5
Y2hvMjhAZ21haWwuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
y20gmF0JqLO1U/l2yVKKxHLLyNKr9MwntBwpN0E8bNgGE/KFWQHKxYrR6r4WkEbd
Gr792TAtlnIk7hPaqzVHe7ABydSvjoOAT6G1e6bLySve2znKaczQ+3xgOsZuSGmC
M1yDadPpNefzgnLpI55lpMf7+SgLE+fFKaVlUv1W1MQOR5arKmblkBkANGdUiD8A
kkqPep1aENqJvH+jQYvN/gQ8Fw6zAY2qkO8r32ENX2h5GYbHDpsF+OROPhz74x9Z
Hh4CXor2zMKuq6Jm5NQdh7n3E46Zw4GHA4hf8R/izaKrfYaP32G/WgIywCuaBp1r
HjFUDF36X6msO2V2xcEk3QIDAQABo4IBLjCCASowCQYDVR0TBAIwADAdBgNVHQ4E
FgQUj9y5k66cDjLmf8WzlK9FKbxefWQwgdsGA1UdIwSB0zCB0IAUxWq10dw09yPX
/yuTYoaORYkO5gOhgaGkgZ4wgZsxCzAJBgNVBAYTAlBIMREwDwYDVQQIDAhCYXRh
bmdhczEQMA4GA1UEBwwHTmFzdWdidTEXMBUGA1UECgwOR0FNRVJTIFZQTiBIVUIx
ETAPBgNVBAsMCFBIQ09STkVSMRUwEwYDVQQDDAxHVlBOSFVCLUp1YW4xJDAiBgkq
hkiG9w0BCQEWFWltYXBzeWNobzI4QGdtYWlsLmNvbYIUe6+cR+UcT7wOjogbu28w
r6rnsNQwEwYDVR0lBAwwCgYIKwYBBQUHAwIwCwYDVR0PBAQDAgeAMA0GCSqGSIb3
DQEBCwUAA4IBAQAR5nGhLVD8f9sB8uIabUFde2CjfiFvVDVih85eFR+huUtruHvQ
GCsFAP9MVaRFCYe2R7qtNfrhzMREXA+BVLiBphc0YDlybhiLl28UUTr2iVXVU7UF
RRxodpEpqMeeB3It7fPsa4b/rQ6NAJZRcgVj/kbjgUd8K0NZaavoxuNOXziSuFnr
o7CPKMm3fft6cni7HeVEKngvWeU0HBBNA666nZsmJUMKKSi5auT84vwRHseiCoIq
0VQb5LRGApNlP+uILhbaLicVf2sm8WoMy1Lf0kTrU4S98hK36dPo9VoNbeaV5uAV
id/+FaOyj+XIcduRalWzjojj9RsrLhWCe6Da
-----END CERTIFICATE-----
EOF31

 # Getting all dns inside resolv.conf then use as Default DNS for our openvpn server
 #grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read -r line; do
	#echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server_tcp.conf
#done
 #grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read -r line; do
	#echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server_udp.conf
#done

 # setting openvpn server port
 sed -i "s|MyOvpnPort1|$OpenVPN_Port1|g" /etc/openvpn/server_tcp.conf
 sed -i "s|MyOvpnPort2|$OpenVPN_Port2|g" /etc/openvpn/server_udp.conf
 
 # Generating openvpn dh.pem file using openssl
 #openssl dhparam -out /etc/openvpn/dh.pem 1024
 
 # Getting some OpenVPN plugins for unix authentication
 wget -qO /etc/openvpn/b.zip 'https://raw.githubusercontent.com/Bonveio/BonvScripts/master/openvpn_plugin64'
 unzip -qq /etc/openvpn/b.zip -d /etc/openvpn
 rm -f /etc/openvpn/b.zip
 
 # Some workaround for OpenVZ machines for "Startup error" openvpn service
 if [[ "$(hostnamectl | grep -i Virtualization | awk '{print $2}' | head -n1)" == 'openvz' ]]; then
 sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn*
 systemctl daemon-reload
fi

 # Allow IPv4 Forwarding
 echo 'net.ipv4.ip_forward=1' > /etc/sysctl.d/20-openvpn.conf && sysctl --system &> /dev/null && echo 1 > /proc/sys/net/ipv4/ip_forward

 # Iptables Rule for OpenVPN server
 #PUBLIC_INET="$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)"
 #IPCIDR='10.200.0.0/16'
 #iptables -I FORWARD -s $IPCIDR -j ACCEPT
 #iptables -t nat -A POSTROUTING -o $PUBLIC_INET -j MASQUERADE
 #iptables -t nat -A POSTROUTING -s $IPCIDR -o $PUBLIC_INET -j MASQUERADE
 
 # Installing Firewalld
 apt install firewalld -y
 systemctl start firewalld
 systemctl enable firewalld
 firewall-cmd --quiet --set-default-zone=public
 firewall-cmd --quiet --zone=public --permanent --add-port=1-65534/tcp
 firewall-cmd --quiet --zone=public --permanent --add-port=1-65534/udp
 firewall-cmd --quiet --reload
 firewall-cmd --quiet --add-masquerade
 firewall-cmd --quiet --permanent --add-masquerade
 firewall-cmd --quiet --permanent --add-service=ssh
 firewall-cmd --quiet --permanent --add-service=openvpn
 firewall-cmd --quiet --permanent --add-service=http
 firewall-cmd --quiet --permanent --add-service=https
 firewall-cmd --quiet --permanent --add-service=privoxy
 firewall-cmd --quiet --permanent --add-service=squid
 firewall-cmd --quiet --reload
 
 # Enabling IPv4 Forwarding
 echo 1 > /proc/sys/net/ipv4/ip_forward
 
 # Starting OpenVPN server
 systemctl start openvpn@server_tcp
 systemctl start openvpn@server_udp
 systemctl enable openvpn@server_tcp
 systemctl enable openvpn@server_udp
 systemctl restart openvpn@server_tcp
 systemctl restart openvpn@server_udp
 
 # Pulling OpenVPN no internet fixer script
 #wget -qO /etc/openvpn/openvpn.bash "https://raw.githubusercontent.com/Bonveio/BonvScripts/master/openvpn.bash"
 #0chmod +x /etc/openvpn/openvpn.bash
}

function InsProxy(){
 # Removing Duplicate privoxy config
 rm -rf /etc/privoxy/config*
 
 # Creating Privoxy server config using cat eof tricks
 cat <<'myPrivoxy' > /etc/privoxy/config
# My Privoxy Server Config
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
filterfile default.filter
logfile logfile
listen-address 0.0.0.0:Privoxy_Port1
listen-address 0.0.0.0:Privoxy_Port2
toggle 1
enable-remote-toggle 0
enable-remote-http-toggle 0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 1
forwarded-connect-retries 1
accept-intercepted-requests 1
allow-cgi-request-crunching 1
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
permit-access 0.0.0.0/0 IP-ADDRESS
myPrivoxy

 # Setting machine's IP Address inside of our privoxy config(security that only allows this machine to use this proxy server)
 sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/privoxy/config
 
 # Setting privoxy ports
 sed -i "s|Privoxy_Port1|$Privoxy_Port1|g" /etc/privoxy/config
 sed -i "s|Privoxy_Port2|$Privoxy_Port2|g" /etc/privoxy/config

 # I'm setting Some Squid workarounds to prevent Privoxy's overflowing file descriptors that causing 50X error when clients trying to connect to your proxy server(thanks for this trick @homer_simpsons)
 apt remove --purge squid -y
 rm -rf /etc/squid/sq*
 apt install squid -y
 
# Squid Ports (must be 1024 or higher)
 Proxy_Port1='8000'
 Proxy_Port2='8118'
 cat <<mySquid > /etc/squid/squid.conf
acl VPN dst $(wget -4qO- http://ipinfo.io/ip)/32
http_access allow VPN
http_access deny all 
http_port 0.0.0.0:$Proxy_Port1
http_port 0.0.0.0:$Proxy_Port2
coredump_dir /var/spool/squid
dns_nameservers 1.1.1.1 1.0.0.1
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname localhost
mySquid

 sed -i "s|SquidCacheHelper|$Privoxy_Port1|g" /etc/squid/squid.conf

 # Starting Proxy server
 echo -e "Restarting proxy server.."
 systemctl restart privoxy
 systemctl restart squid
}

function OvpnConfigs(){
 # Creating nginx config for our ovpn config downloads webserver
 cat <<'myNginxC' > /etc/nginx/conf.d/bonveio-ovpn-config.conf
# My OpenVPN Config Download Directory
server {
 listen 0.0.0.0:myNginx;
 server_name localhost;
 root /var/www/openvpn;
 index index.html;
}
myNginxC

 # Setting our nginx config port for .ovpn download site
 sed -i "s|myNginx|$OvpnDownload_Port|g" /etc/nginx/conf.d/bonveio-ovpn-config.conf

 # Removing Default nginx page(port 80)
 rm -rf /etc/nginx/sites-*

 # Creating our root directory for all of our .ovpn configs
 rm -rf /var/www/openvpn
 mkdir -p /var/www/openvpn

 # Now creating all of our OpenVPN Configs 
cat <<EOF152> /var/www/openvpn/GTMConfig.ovpn
# GVPNHUB TEAM
# TEAM PAPS
client
dev tun
proto tcp
remote $IPADDR $OpenVPN_Port1
remote-cert-tls server
tun-mtu 1500
mssfix 1450
auth-user-pass
auth sha256
cipher AES-256-CBC
comp-lzo
setenv CLIENT_CERT 1
reneg-sec 0
http-proxy $(curl -s http://ipinfo.io/ip || wget -q http://ipinfo.io/ip) $Privoxy_Port1
http-proxy-option CUSTOM-HEADER Host redirect.googlevideo.com
http-proxy-option CUSTOM-HEADER X-Forwarded-For redirect.googlevideo.com

<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/CLIENT.crt)
</cert>
<key>
$(cat /etc/openvpn/ta.key)
$(cat /etc/openvpn/CLIENT.key)
</key>

EOF152

cat <<EOF16> /var/www/openvpn/Default.ovpn
# GVPNHUB TEAM
# TEAM PAPS
client
dev tun
proto udp
remote $IPADDR $OpenVPN_Port2
remote-cert-tls server
tun-mtu 1500
mssfix 1450
auth-user-pass
auth sha256
cipher AES-256-CBC
comp-lzo
setenv CLIENT_CERT 1
reneg-sec 0

<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/CLIENT.crt)
</cert>
<key>
$(cat /etc/openvpn/ta.key)
$(cat /etc/openvpn/CLIENT.key)
</key>
EOF16

cat <<EOF160> /var/www/openvpn/GStories.ovpn
# GVPNHUB TEAM
# TEAM PAPS
client
dev tun
proto tcp
remote $IPADDR $OpenVPN_Port1
remote-cert-tls server
tun-mtu 1500
mssfix 1450
auth-user-pass
auth sha256
cipher AES-256-CBC
comp-lzo
setenv CLIENT_CERT 1
reneg-sec 0
http-proxy $(curl -s http://ipinfo.io/ip || wget -q http://ipinfo.io/ip) $Privoxy_Port1
http-proxy-option CUSTOM-HEADER "Host: tiktoktreats.onelink.me"
http-proxy-option CUSTOM-HEADER "X-Online-Host: tiktoktreats.onelink.me"
http-proxy-option CUSTOM-HEADER "X-Forward-Host: tiktoktreats.onelink.me"
http-proxy-option CUSTOM-HEADER "Connection: Keep-Alive"

<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/CLIENT.crt)
</cert>
<key>
$(cat /etc/openvpn/ta.key)
$(cat /etc/openvpn/CLIENT.key)
</key>

EOF160

cat <<EOF17> /var/www/openvpn/GGames.ovpn
# GVPNHUB TEAM
# TEAM PAPS
client
dev tun
proto tcp
remote $IPADDR $OpenVPN_Port1
remote-cert-tls server
tun-mtu 1500
mssfix 1450
auth-user-pass
auth sha256
cipher AES-256-CBC
comp-lzo
setenv CLIENT_CERT 1
reneg-sec 0
http-proxy $(curl -s http://ipinfo.io/ip || wget -q http://ipinfo.io/ip) $Privoxy_Port1
http-proxy-option CUSTOM-HEADER "Host: c3cdn.ml.youngjoygame.com"
http-proxy-option CUSTOM-HEADER "X-Online-Host: c3cdn.ml.youngjoygame.com"
http-proxy-option CUSTOM-HEADER "X-Forward-Host: c3cdn.ml.youngjoygame.com"
http-proxy-option CUSTOM-HEADER "Connection: Keep-Alive"

<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/CLIENT.crt)
</cert>
<key>
$(cat /etc/openvpn/ta.key)
$(cat /etc/openvpn/CLIENT.key)
</key>

EOF17

 # Creating OVPN download site index.html
cat <<'mySiteOvpn' > /var/www/openvpn/index.html
<!DOCTYPE html>
<html lang="en">

<!-- GVPNHUB CONF SITE -->

<head>
<meta charset="utf-8" />
<title>GVPNHUB CONF SITE</title>
<meta name="description" content="This site is made only for GVPNHUB CONF's and are NOT FOR SALE" />
<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" />
<meta name="theme-color" content="#000000" />
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
</head>
<body style="background-image: linear-gradient(to right, #6f9ee8, #427bd4, #195bc2)">
<div class="container justify-content-center>
    <div class="col-md">
        <div class="view" style="margin-top:3em;margin-bottom:3em;">
                <center>
                    <img class="w3-circle" src="https://scontent-sin6-3.xx.fbcdn.net/v/t1.0-9/118508519_186803686179687_3291296325019730595_n.png?_nc_cat=104&ccb=2&_nc_sid=85a577&_nc_ohc=zBzafUR0WV4AX9hVFgK&_nc_ht=scontent-sin6-3.xx&oh=d1a8a513652e83d653d8459a30b67c5e&oe=6013745A" width="250px" height="250px" class="card-img-top">
                </center>
        </div>
    <div class="card">
        <div class="card-body">
            <h5 class="card-title"><center><b>GVPNHUB CONF LIST</b></center></h5>
            <br>
            <ul class="list-group">
                <li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;">
                    <p>For Globe/TM 
                        <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span>
                        <br>
                        <small> For EZ/GS Promo with WNP freebies</small>
                    </p>
                    <a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/GTMConfig.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a>
                </li>
                <li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;">
                    <p>For Sun 
                        <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span>
                        <br>
                        <small> For Default Config</small>
                    </p>
                    <a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/Default.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a>
                </li>
                <li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;">
                    <p>For TRINET 
                        <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span>
                        <br>
                        <small> Trinet GIGASTORIES Promos</small>
                    </p>
                    <a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/GStories.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a>
                </li>
                <li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;">
                    <p> For TRINET 
                        <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span>
                        <br>
                        <small> Trinet GIGAGAMES Promos</small>
                    </p>
                    <a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/GGames.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a>
                </li>
            </ul>
        </div>
        </div>   
    </div>
    </div>
</body>
</html>
mySiteOvpn
 
 # Setting template's correct name,IP address and nginx Port
 sed -i "s|MyScriptName|$MyScriptName|g" /var/www/openvpn/index.html
 sed -i "s|NGINXPORT|$OvpnDownload_Port|g" /var/www/openvpn/index.html
 sed -i "s|IP-ADDRESS|$IPADDR|g" /var/www/openvpn/index.html

 # Restarting nginx service
 systemctl restart nginx
 
 # Creating all .ovpn config archives
 cd /var/www/openvpn
 zip -qq -r AIO.zip *.ovpn
 cd
}

function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
IPADDR="$(ip_address)"

function ConfStartup(){
 # Daily reboot time of our machine
 # For cron commands, visit https://crontab.guru
 echo -e "0 4\t* * *\troot\treboot" > /etc/cron.d/b_reboot_job

 # Creating directory for startup script
 rm -rf /etc/barts
 mkdir -p /etc/barts
 chmod -R 755 /etc/barts
 
 # Creating startup script using cat eof tricks
 cat <<'EOFSH' > /etc/barts/startup.sh
#!/bin/bash
# Setting server local time
ln -fs /usr/share/zoneinfo/MyVPS_Time /etc/localtime

# Prevent DOS-like UI when installing using APT (Disabling APT interactive dialog)
export DEBIAN_FRONTEND=noninteractive

# Allowing ALL TCP ports for our machine (Simple workaround for policy-based VPS)
iptables -A INPUT -s $(wget -4qO- http://ipinfo.io/ip) -p tcp -m multiport --dport 1:65535 -j ACCEPT

# Allowing OpenVPN to Forward traffic
/bin/bash /etc/openvpn/openvpn.bash

# Deleting Expired SSH Accounts
/usr/local/sbin/delete_expired &> /dev/null
EOFSH
 chmod +x /etc/barts/startup.sh
 
 # Setting server local time every time this machine reboots
 sed -i "s|MyVPS_Time|$MyVPS_Time|g" /etc/barts/startup.sh

 # 
 rm -rf /etc/sysctl.d/99*

 # Setting our startup script to run every machine boots 
 echo "[Unit]
Description=Barts Startup Script
Before=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
ExecStart=/bin/bash /etc/barts/startup.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target" > /etc/systemd/system/barts.service
 chmod +x /etc/systemd/system/barts.service
 systemctl daemon-reload
 systemctl start barts
 systemctl enable barts &> /dev/null

 # Rebooting cron service
 systemctl restart cron
 systemctl enable cron
 
}

function ConfMenu(){
echo -e " Creating Menu scripts.."

cd /usr/local/sbin/
rm -rf {accounts,base-ports,base-ports-wc,base-script,bench-network,clearcache,connections,create,create_random,create_trial,delete_expired,diagnose,edit_dropbear,edit_openssh,edit_openvpn,edit_ports,edit_squid3,edit_stunnel4,locked_list,menu,options,ram,reboot_sys,reboot_sys_auto,restart_services,server,set_multilogin_autokill,set_multilogin_autokill_lib,show_ports,speedtest,user_delete,user_details,user_details_lib,user_extend,user_list,user_lock,user_unlock}
wget -q 'https://github.com/imaPSYCHO/Parts/raw/main/menu.zip'
unzip -qq menu.zip
rm -f menu.zip
chmod +x ./*
dos2unix ./* &> /dev/null
sed -i 's|/etc/squid/squid.conf|/etc/privoxy/config|g' ./*
sed -i 's|http_port|listen-address|g' ./*
cd ~

echo 'clear' > /etc/profile.d/barts.sh
echo 'echo '' > /var/log/syslog' >> /etc/profile.d/barts.sh
echo 'screenfetch -p -A Ubuntu' >> /etc/profile.d/barts.sh
chmod +x /etc/profile.d/barts.sh
}

function ScriptMessage(){
 echo -e ""
 echo -e " (｡◕‿◕｡) $MyScriptName Ubuntu VPS Installer"
 echo -e " Open release version"
 echo -e ""
 echo -e " Script created by Bonveio"
 echo -e " "
}


#############################
#############################
## Installation Process
#############################
## WARNING: Do not modify or edit anything
## if you did'nt know what to do.
## This part is too sensitive.
#############################
#############################

 # First thing to do is check if this machine is Debian
 source /etc/os-release
if [[ "$ID" != 'ubuntu' ]]; then
 ScriptMessage
 echo -e "[\e[1;31mError\e[0m] This script is for Ubuntu only, exting..." 
 exit 1
fi

 # Now check if our machine is in root user, if not, this script exits
 # If you're on sudo user, run `sudo su -` first before running this script
 if [[ $EUID -ne 0 ]];then
 ScriptMessage
 echo -e "[\e[1;31mError\e[0m] This script must be run as root, exiting..."
 exit 1
fi

 # (For OpenVPN) Checking it this machine have TUN Module, this is the tunneling interface of OpenVPN server
 if [[ ! -e /dev/net/tun ]]; then
 echo -e "[\e[1;31m×\e[0m] You cant use this script without TUN Module installed/embedded in your machine, file a support ticket to your machine admin about this matter"
 echo -e "[\e[1;31m-\e[0m] Script is now exiting..."
 exit 1
fi

 # Begin Installation by Updating and Upgrading machine and then Installing all our wanted packages/services to be install.
 ScriptMessage
 sleep 2
 
 # Configure OpenSSH and Dropbear
 echo -e "Configuring ssh..."
 InstSSH
 
 # Configure Stunnel
 echo -e "Configuring stunnel..."
 InsStunnel
 
 # Configure Webmin
 echo -e "Configuring webmin..."
 InstWebmin
 
 # Configure Privoxy and Squid
 echo -e "Configuring proxy..."
 InsProxy
 
 # Configure OpenVPN
 echo -e "Configuring OpenVPN..."
 InsOpenVPN
 
 # Configuring Nginx OVPN config download site
 OvpnConfigs

 # Some assistance and startup scripts
 ConfStartup

 # VPS Menu script v1.0
 ConfMenu
 
 # Setting server local time
 ln -fs /usr/share/zoneinfo/$MyVPS_Time /etc/localtime
 
 clear
 cd ~

 # Running sysinfo 
 bash /etc/profile.d/barts.sh
 
 # Showing script's banner message
 ScriptMessage
 
 # Showing additional information from installating this script
 echo -e ""
 echo -e " Success Installation"
 echo -e ""
 echo -e " Service Ports: "
 echo -e " OpenSSH: $SSH_Port1, $SSH_Port2"
 echo -e " Stunnel: $Stunnel_Port1, $Stunnel_Port2"
 echo -e " DropbearSSH: $Dropbear_Port1, $Dropbear_Port2"
 echo -e " Privoxy: $Privoxy_Port1, $Privoxy_Port2"
 echo -e " Squid: $Proxy_Port1, $Proxy_Port2"
 echo -e " OpenVPN: $OpenVPN_Port1, $OpenVPN_Port2"
 echo -e " NGiNX: $OvpnDownload_Port"
 echo -e " Webmin: 10000"
 echo -e " L2tp IPSec Key: imaPSYCHO"
 echo -e ""
 echo -e ""
 echo -e " OpenVPN Configs Download site"
 echo -e " http://$IPADDR:$OvpnDownload_Port"
 echo -e ""
 echo -e " All OpenVPN Configs Archive"
 echo -e " http://$IPADDR:$OvpnDownload_Port/AIO.zip"
 echo -e ""
 echo -e ""
 echo -e " [Note] DO NOT RESELL THIS SCRIPT"

 # Clearing all logs from installation
 rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog

rm -f Ubuntu-VPS-Installer*
exit 1
